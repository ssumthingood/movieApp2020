{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","props","console","log","Navigation","fromNavigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"uXAsCeA,MAjCf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OAAO,yBAAKC,UAAY,SACpB,kBAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,gBACTC,MAAM,CAACP,OAAMD,QAAOE,UAASC,SAAQC,YAEzC,yBAAKC,UAAY,SAASI,IAAON,EAAQO,IAAKV,EAAOA,MAAOA,IAC5D,yBAAKK,UAAY,eACjB,wBAAIA,UAAY,gBAAhB,WAAwCL,GACxC,wBAAIK,UAAY,eAAhB,UAAsCJ,GACtC,wBAAII,UAAU,iBACTD,EAAOO,KAAI,SAACC,EAAOC,GAChB,OAAO,wBAAIC,IAAKD,EAAOR,UAAY,gBAAgBO,OAG3D,uBAAGP,UAAU,kBAAb,aAAyCH,EAAQa,MAAM,EAAE,KAAzD,QAIA,gCCwBOC,G,kNA1CfR,MAAM,CACJS,WAAU,EACVC,OAAQ,I,EAGVC,U,sBAAW,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGCJ,EAHD,EAEPK,KACEA,KAAML,OAIV,EAAKM,SAAS,CAACN,OAASA,EAAQD,WAAY,IAPnC,2C,kEAWTQ,KAAKN,c,+BAGI,IAAD,EACsBM,KAAKjB,MAA1BS,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OAAO,6BAASb,UAAY,aACzBY,EACC,yBAAKZ,UAAY,UAAS,0BAAMA,UAAU,eAAhB,iBAC1B,yBAAKA,UAAU,UACZa,EAAOP,KAAI,SAACe,GAAD,OAChB,kBAAC,EAAD,CACEZ,IAAOY,EAAMC,GACbA,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZD,MAAO0B,EAAM1B,MACbE,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,kB,GAlCHyB,IAAMC,Y,qBCQVC,MAVf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,yBAAK3B,UAAU,oBACX,4HACA,8D,MCKG8B,MATf,WACI,OACI,yBAAK9B,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAI,CAACC,SAAU,SAAUC,MAAM,CAAE4B,gBAAe,KAAtD,WCkBGC,E,kLAlBS,IAAD,EACYZ,KAAKO,MAAzBM,EADQ,EACRA,SAASC,EADD,EACCA,aACMC,IAAnBF,EAAS9B,OACR+B,EAAQE,KAAK,O,+BAIZ,IACEH,EAAYb,KAAKO,MAAjBM,SACP,OAAGA,EAAS9B,MACD,8BAAO8B,EAAS9B,MAAMR,OAEtB,S,GAbE6B,IAAMC,WCyDZY,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW7B,IACxC,kBAAC,IAAD,CAAO2B,KAAK,SAASE,UAAWd,IAChC,kBAAC,IAAD,CAAOY,KAAK,gBAAgBE,UAAWR,MCvD7CS,IAASC,OACP,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.9b5feb13.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({title, year, summary, poster, genres}){\r\n    return(<div className = \"movie\">\r\n        <Link to={{\r\n            pathname:'/movie-detail',\r\n            state:{year, title, summary, poster, genres},\r\n        }}>\r\n        <img className = \"poster\" src = {poster} alt={title} title={title}/> \r\n        <div className = \"movie__data\">\r\n        <h3 className = \"movie__title\">Title : {title}</h3>\r\n        <h5 className = \"movie__year\">Year : {year}</h5>\r\n        <ul className=\"movie__genres\">\r\n            {genres.map((genre, index)=>{\r\n                return <li key={index} className = \"movie__genre\">{genre}</li>;\r\n            })}\r\n        </ul>\r\n        <p className=\"movie__summary\">Summary : {summary.slice(0,180)}...</p>\r\n        {/* width=\"300px\" height=\"300px\" */}\r\n        </div>\r\n        \r\n        <br/>\r\n        </Link>\r\n        </div>\r\n        );\r\n}\r\n\r\nMovie.propTypes = {\r\n    year:PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component{\r\nstate={\r\n  isLoading:true,\r\n  movies: [],\r\n};\r\n\r\ngetMovies =async () =>{\r\n  const {\r\n    data:{\r\n      data:{movies},\r\n    },\r\n  } =await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n\r\n  this.setState({movies : movies, isLoading : false});\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.getMovies();\r\n}\r\n\r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    return <section className = \"container\">\r\n      {isLoading ? (\r\n        <div className = \"loader\"><span className=\"loader_text\">'Loading...'</span></div>):(\r\n        <div className=\"movies\">\r\n          {movies.map((movie)=> (\r\n      <Movie\r\n        key = {movie.id}\r\n        id={movie.id}\r\n        year={movie.year}\r\n        title={movie.title}\r\n        summary={movie.summary}\r\n        poster={movie.medium_cover_image}\r\n        genres={movie.genres}\r\n        />\r\n        ))}\r\n    </div>\r\n    )}\r\n    </section>;\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props){\r\n    console.log(props);\r\n    return(\r\n        <div className=\"about__container\">\r\n            <span>\"대충 흑백사진에 글쓰면 명언같다.\"</span>\r\n            <span>- 박준홍, 2020</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation(){\r\n    return(\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to={{pathname: '/about', state:{ fromNavigation:true}}}>About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\n// function Detail(props){\r\n//     console.log(props);\r\n//     return <span>hello</span>;\r\n// }\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        const {location,history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push('/');\r\n        }\r\n    }//props가 undefied인 경우 '/' 를 push하면서 home으로 돌아간다.\r\n\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>;\r\n        }else{\r\n            return null;\r\n        }\r\n    }//render가 componendDidMount보다 먼저 실행되기 때문에 props가 undefied인 경우 render메소드가 null을 리턴\r\n}\r\n\r\n\r\nexport default Detail;","import React from 'react';\nimport Home from './routes/Home';\nimport './App.css';\nimport {HashRouter, Route} from 'react-router-dom';\nimport About from './routes/About';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n// import axios from 'axios';\n// import Movie from './Movie';\n\n// class App extends React.Component{\n// state={\n//   isLoading:true,\n//   movies: [],\n// };\n\n// getMovies =async () =>{\n//   const {\n//     data:{\n//       data:{movies},\n//     },\n//   } =await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n\n//   this.setState({movies : movies, isLoading:false});\n// }\n\n// componentDidMount(){\n//   this.getMovies();\n// }\n\n//   render(){\n//     const {isLoading, movies} = this.state;\n//     return <section className = \"container\">\n//       {isLoading ? (\n//         <div className = \"loader\"><span className=\"loader_text\">'Loading...'</span></div>):(\n//         <div className=\"movies\">\n//           {movies.map((movie)=> (\n//       <Movie\n//         key = {movie.id}\n//         id={movie.id}\n//         year={movie.year}\n//         title={movie.title}\n//         summary={movie.summary}\n//         poster={movie.medium_cover_image}\n//         genres={movie.genres}\n//         />\n//         ))}\n//     </div>\n//     )}\n//     </section>;\n//   }\n// }\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}